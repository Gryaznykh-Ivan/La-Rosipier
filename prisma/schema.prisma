generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

enum Role {
    USER
    SELLER
    ADMIN
}

model User {
    id               String            @id @default(uuid())
    login            String            @unique
    code             String?
    firstName        String?
    lastName         String?
    role             Role              @default(USER)
    addresses        Address[]
    orders           Order[]
    favoriteProducts FavoriteProduct[]
    variantsForSale  Variant[]
    tokens           Token[]
    defaultAddress   DefaultAddress?
    createdAt        DateTime          @default(now())
    updatedAt        DateTime          @updatedAt
}

model Token {
    id           String   @id @default(uuid())
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId       String
    refreshToken String
    expiresIn    DateTime
    createdAt    DateTime @default(now())
}

model Address {
    id     String @id @default(uuid())
    user   User   @relation(fields: [userId], references: [id])
    userId String
}

model DefaultAddress {
    id     String @id @default(uuid())
    user   User   @relation(fields: [userId], references: [id])
    userId String @unique
}

model Order {
    id     String @id @default(uuid())
    user   User   @relation(fields: [userId], references: [id])
    userId String
}

model FavoriteProduct {
    Product   Product @relation(fields: [productId], references: [id])
    productId String
    user      User    @relation(fields: [userId], references: [id])
    userId    String

    @@id([userId, productId])
}

model Product {
    id               String            @id @default(uuid())
    collections      Collection[]
    variants         Variant[]
    productIsFavored FavoriteProduct[]
}

model Variant {
    id        String  @id @default(uuid())
    Product   Product @relation(fields: [productId], references: [id])
    productId String
    user      User?   @relation(fields: [userId], references: [id])
    userId    String?
}

model Collection {
    id       String    @id @default(uuid())
    name     String    @unique
    products Product[]
}
